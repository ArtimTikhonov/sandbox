version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - sandbox-network

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - sandbox-network

  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile
      target: api-gateway
      args:
        REBUILD_DATE: ${REBUILD_DATE:-$(date +%Y%m%d%H%M%S)}
    container_name: api-gateway
    ports:
      - "8000:8000"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_COMPATIBILITY_VERIFIER_ENABLED=false
    networks:
      - sandbox-network
    depends_on:
      - service-one
      - service-two
      - kafka

  service-one:
    build:
      context: .
      dockerfile: Dockerfile
      target: service-one
      args:
        REBUILD_DATE: ${REBUILD_DATE:-$(date +%Y%m%d%H%M%S)}
    container_name: service-one
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - sandbox-network
    depends_on:
      - kafka

  service-two:
    build:
      context: .
      dockerfile: Dockerfile
      target: service-two
      args:
        REBUILD_DATE: ${REBUILD_DATE:-$(date +%Y%m%d%H%M%S)}
    container_name: service-two
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - sandbox-network
    depends_on:
      - service-one
      - kafka

networks:
  sandbox-network:
    driver: bridge